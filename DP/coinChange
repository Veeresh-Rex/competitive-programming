#include <bits/stdc++.h>
using namespace std;
#define gc getchar_unlocked
#define fo(i, n) for (i = 0; i < n; i++)
#define Fo(i, k, n) for (i = k; k < n ? i < n : i > n; k < n ? i += 1 : i -= 1)
#define ll long long
#define deb(x) cout << #x << "=" << x << endl
#define deb2(x, y) cout << #x << "=" << x << "," << #y << "=" << y << endl
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(x) memset(x, 0, sizeof(x))
#define sortall(x) sort(all(x))
#define tr(it, a) for (auto it = a.begin(); it != a.end(); it++)
#define PI 3.1415926535897932384626
typedef pair<int, int> pii;
typedef pair<ll, ll> pl;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<pii> vpii;
typedef vector<pl> vpl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
class Solution
{
public:
    int count(int S[], int m, int n)
    {
        int arr[m + 1][n + 1];
        for (int i = 0; i <= m; i++)
        {
            arr[i][0] = 1;
        }

        for (int i = 1; i <= n; i++)
        {
            arr[0][i] = 0;
        }

        for (int j = 1; j < m + 1; j++)
        {
            for (int i = 1; i <= n; i++)
            {
                int x = i - S[j - 1];

                if (x >= 0)
                {
                    int total = arr[j][x] + arr[j - 1][i];
                    //cout << total << "\n";
                    arr[j][i] = total;
                }
                else
                {
                    arr[j][i] = arr[j - 1][i];
                }
            }
        }

        return arr[m][n];
    }
};
int32_t main()
{

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n, m;
        cin >> n >> m;
        int arr[m];
        for (int i = 0; i < m; i++)
        {
            cin >> arr[i];
        }
        Solution ob;
        cout << ob.count(arr, m, n);
    }
    return 0;
}
